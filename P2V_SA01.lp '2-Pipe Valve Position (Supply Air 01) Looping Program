'****************************************
'Author:  
'Date:  
'Description:  2-Pipe Valve Control Program
'Flow Type:  Looping
'Triggers:  N/A
'****************************************

Numeric LastError 'Stores last error for later calculation
Numeric PIDMin, PIDMax 'max and min PID limits
Datetime LastTime 'last time PID was calculated

Initialize: 'initialize PID parameters
  PIDMin = 0
  PIDMax = 1
  LastError = 0
  LastTime = Date
  Goto PID_Off

PID_Off: 'turn off PID (maintin last position)
  If SAF_RI then
    P2V_PM = 1
  Else
    If F_M and not SAF_RI then P2V_PM = 2 Else P2V_PM = 3
  Endif
  LastError = 0
  LastTime = Date
  P2V_POS = P2V_PID
  Basedon P2V_PM Goto PID_On, PID_Max, PID_Min, PID_Off

PID_On: 'allow PID to modulate
  If SAF_RI then
    P2V_PM = 1
  Else
    If F_M and not SAF_RI then P2V_PM = 2 Else P2V_PM = 3
  Endif
  If Date >= LastTime + P2V_CI then
    P2V_PID = PI.fct(SA_T, SA_SP, P2V_PB, P2V_IT, P2V_ST, P2V_CI, P2V_DZ, PIDMax, PIDMin, P2_M, LastError, LastTime, P2V_PID, P2V_POS)
  Endif
  P2V_POS = P2V_PID
  Basedon P2V_PM Goto PID_On, PID_Max, PID_Min, PID_Off

PID_Max: 'send PID to maximum position
  If SAF_RI then
    P2V_PM = 1
  Else
    If F_M and not SAF_RI then P2V_PM = 2 Else P2V_PM = 3
  Endif
  P2V_PID = PIDMax
  LastError = 0
  LastTime = Date
  P2V_POS = P2V_PID
  Basedon P2V_PM Goto PID_On, PID_Max, PID_Min, PID_Off

PID_Min: 'send PID to minimum position
  If SAF_RI then
    P2V_PM = 1
  Else
    If F_M and not SAF_RI then P2V_PM = 2 Else P2V_PM = 3
  Endif
  P2V_PID = PIDMin
  LastError = 0
  LastTime = Date
  P2V_POS = P2V_PID
  Basedon P2V_PM Goto PID_On, PID_Max, PID_Min, PID_Off

E:
  If TS > 10 then goto Initialize
